# -*- coding: utf-8 -*-
"""MosaicPre.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1i-qNb7GwawS_brK-m6HYTxlHQ2O3GffJ
"""

import cv2
import numpy as np
from google.colab.patches import cv2_imshow

img = cv2.imread('test7.jpeg')

gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
cv2_imshow(gray)
kernel = np.ones((3,3), np.uint8)
gray= cv2.erode(gray, kernel, iterations=1)
# gray= cv2.dilate(gray, kernel, iterations=1)
cv2_imshow(gray)
blur=cv2.GaussianBlur(gray,(5,5),2)
ret, thresh = cv2.threshold(blur, 0, 255, cv2.THRESH_BINARY+cv2.THRESH_OTSU)
cv2_imshow(thresh)

print(thresh.shape)
h=thresh.shape[0]
w=thresh.shape[1]
prev=0
cont=0
v=[]
for i in range(0,w):
    x=0
    for j in range(0,h):
         if(thresh[j][i]==0):
             x+=1
    if(x==0 and cont==1):
        if(i-prev<10):
           cont=0
        else:
              cont=0
              v.append((prev,i))
    elif(x>0 and cont==0):
          prev=i
          cont=1

# for x in v:
#     cv2.line(img,(x[0],0),(x[0],h-1),(255,0,0),3)
#     cv2.line(img,(x[1],0),(x[1],h-1),(255,0,0),3)

prev=0        
u=[]
for x in v:
      s=x[0]
      e=x[1]
      cont=0
      for i in range(0,h):
           z=0
           for j in range(s,e+1):
               if(thresh[i][j]==0):
                   z+=1
           if(z>0 and cont==0):
                prev=i
                cont=1
           elif(z==0 and cont==1):
                if(i-prev<10):
                     cont=0
                else:
                  u.append((prev,i))
                  break
print(v)
print(u)
v2=[]
u2=[]
i=0
while i<len(v)-1:
      if(v[i+1][0]-v[i][1]<3):
           v2.append((v[i][0],v[i+1][1]))
           u2.append((min(u[i][0],u[i+1][0]),max(u[i][1],u[i+1][1])))
           i+=2
      else:
         v2.append(v[i])
         u2.append(u[i])
         i+=1
if(i==len(v)-1):
    v2.append(v[-1])
    u2.append(u[-1])

st_list=[]
end_list=[]
for i in range(len(v2)):
   if((v2[i][1]-v2[i][0])>30 and u2[i][1]-u2[i][0]>30):
       cv2.rectangle(img,(v2[i][0],u2[i][0]),(v2[i][1],u2[i][1]),(255,0,0),3)
       st_list.append((u2[i][0],v2[i][0]))
       end_list.append((u2[i][1],v2[i][1]))

cv2_imshow(img)
# print(v2)
# print(u2)